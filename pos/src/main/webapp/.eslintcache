[{"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/index.js":"1","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/serviceWorker.js":"2","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/store.js":"3","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/i18n.js":"4","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/MainDrawer.js":"5","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/translations.js":"6","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/AppMenu.js":"7","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/themeObject.js":"8","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/reducers/global/rootReducer.js":"9","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/supplier/SupplierView.js":"10","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/AppMenuItem.js":"11","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/reducers/global/saleTabsReducer.js":"12","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/locale/en.js":"13","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/reducers/global/inventoryMovementReducer.js":"14","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/locale/sq.js":"15","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/SubCategoryIcon.js":"16","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/ProductConfigIcon.js":"17","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/TaxIcon.js":"18","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/UomIcon.js":"19","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/Tools.js":"20","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/SaleTable.js":"21","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/TabPanel.js":"22","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/Summary.js":"23","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/utils.js":"24","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ProgressButton.js":"25","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ValidTextField.js":"26","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/AutocompleteDropdown.js":"27","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/hooks/useFetch.js":"28","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/client/Client.ts":"29","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/sub-category/NewSubCategory.js":"30","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/fetch.tsx":"31","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/IntTextField.js":"32","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/EmptyObjects.js":"33","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/HttpErrorHandling.tsx":"34","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/FormDialog.js":"35","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ConfirmationDialog.js":"36","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/GradientButton.js":"37","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/ProductTile.js":"38","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/AppMenuItemComponent.js":"39","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ValidTableCell.js":"40","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/product/NewProduct.js":"41","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/tax/NewTax.js":"42","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/uom/NewUom.js":"43","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/category/NewCategory.js":"44","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/customer/NewCustomer.js":"45","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/supplier/NewSupplier.js":"46","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/PurchaseTable.js":"47","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/PurchaseHeader.js":"48","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/CategoriesDrawer.js":"49","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ValidCheckBox.js":"50","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/hooks/useTraceUpdate.js":"51","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/ProductDropdown.js":"52","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/SupplierDropdown.js":"53","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/CustomBackdrop.js":"54","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/PurchaseView.js":"55","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/product/ProductView.js":"56","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/sub-category/SubCategoryView.js":"57","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/customer/CustomerView.js":"58","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/category/CategoryView.js":"59","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/tax/TaxView.js":"60","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/uom/UomView.js":"61","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/SaleView.js":"62","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/hooks/queryClient.js":"63","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/QtyTextField.js":"64","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/ProductList.js":"65","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/QtyTextField.js":"66","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/open-existing/OpenExistingDialog.js":"67","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/BasicTable.js":"68","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/CustomTable.js":"69"},{"size":616,"mtime":1601240395421,"results":"70","hashOfConfig":"71"},{"size":5106,"mtime":1605757945182,"results":"72","hashOfConfig":"71"},{"size":244,"mtime":1608130548693,"results":"73","hashOfConfig":"71"},{"size":447,"mtime":1601240395420,"results":"74","hashOfConfig":"71"},{"size":16633,"mtime":1609732440899,"results":"75","hashOfConfig":"71"},{"size":193,"mtime":1601240395421,"results":"76","hashOfConfig":"71"},{"size":4201,"mtime":1605278948427,"results":"77","hashOfConfig":"71"},{"size":824,"mtime":1603835902507,"results":"78","hashOfConfig":"71"},{"size":301,"mtime":1601517439431,"results":"79","hashOfConfig":"71"},{"size":2505,"mtime":1610746202194,"results":"80","hashOfConfig":"71"},{"size":2287,"mtime":1606253030539,"results":"81","hashOfConfig":"71"},{"size":2702,"mtime":1610337511600,"results":"82","hashOfConfig":"71"},{"size":116,"mtime":1601240395421,"results":"83","hashOfConfig":"71"},{"size":4472,"mtime":1610239324407,"results":"84","hashOfConfig":"71"},{"size":112,"mtime":1601240395421,"results":"85","hashOfConfig":"71"},{"size":1547,"mtime":1604697678331,"results":"86","hashOfConfig":"71"},{"size":3007,"mtime":1605544549830,"results":"87","hashOfConfig":"71"},{"size":2420,"mtime":1604698834748,"results":"88","hashOfConfig":"71"},{"size":977,"mtime":1604697582187,"results":"89","hashOfConfig":"71"},{"size":1771,"mtime":1601240395420,"results":"90","hashOfConfig":"71"},{"size":4246,"mtime":1609820648531,"results":"91","hashOfConfig":"71"},{"size":575,"mtime":1601240395420,"results":"92","hashOfConfig":"71"},{"size":946,"mtime":1607306402083,"results":"93","hashOfConfig":"71"},{"size":863,"mtime":1611032001826,"results":"94","hashOfConfig":"71"},{"size":2365,"mtime":1607238939421,"results":"95","hashOfConfig":"71"},{"size":380,"mtime":1603891759585,"results":"96","hashOfConfig":"71"},{"size":3397,"mtime":1609551426073,"results":"97","hashOfConfig":"71"},{"size":8775,"mtime":1607631785245,"results":"98","hashOfConfig":"71"},{"size":74517,"mtime":1610725770614,"results":"99","hashOfConfig":"71"},{"size":2700,"mtime":1608772918840,"results":"100","hashOfConfig":"71"},{"size":3331,"mtime":1605667783345,"results":"101","hashOfConfig":"71"},{"size":376,"mtime":1603737550877,"results":"102","hashOfConfig":"71"},{"size":1077,"mtime":1606837331892,"results":"103","hashOfConfig":"71"},{"size":499,"mtime":1601240395422,"results":"104","hashOfConfig":"71"},{"size":5770,"mtime":1610692586581,"results":"105","hashOfConfig":"71"},{"size":2008,"mtime":1607097482744,"results":"106","hashOfConfig":"71"},{"size":939,"mtime":1604344416338,"results":"107","hashOfConfig":"71"},{"size":3195,"mtime":1609820502203,"results":"108","hashOfConfig":"71"},{"size":996,"mtime":1603503886379,"results":"109","hashOfConfig":"71"},{"size":556,"mtime":1608219225663,"results":"110","hashOfConfig":"71"},{"size":6297,"mtime":1608608672827,"results":"111","hashOfConfig":"71"},{"size":2408,"mtime":1608608672795,"results":"112","hashOfConfig":"71"},{"size":1573,"mtime":1608608672809,"results":"113","hashOfConfig":"71"},{"size":1566,"mtime":1608608672799,"results":"114","hashOfConfig":"71"},{"size":2010,"mtime":1608608672803,"results":"115","hashOfConfig":"71"},{"size":1979,"mtime":1608608339314,"results":"116","hashOfConfig":"71"},{"size":5052,"mtime":1610240455225,"results":"117","hashOfConfig":"71"},{"size":1753,"mtime":1611587939988,"results":"118","hashOfConfig":"71"},{"size":7530,"mtime":1609732512690,"results":"119","hashOfConfig":"71"},{"size":1102,"mtime":1606246152321,"results":"120","hashOfConfig":"71"},{"size":518,"mtime":1607454923066,"results":"121","hashOfConfig":"71"},{"size":4337,"mtime":1610240151846,"results":"122","hashOfConfig":"71"},{"size":2719,"mtime":1608772918847,"results":"123","hashOfConfig":"71"},{"size":554,"mtime":1609822259899,"results":"124","hashOfConfig":"71"},{"size":5450,"mtime":1611587883908,"results":"125","hashOfConfig":"71"},{"size":5806,"mtime":1610746202180,"results":"126","hashOfConfig":"71"},{"size":2751,"mtime":1610746202175,"results":"127","hashOfConfig":"71"},{"size":2575,"mtime":1610746202204,"results":"128","hashOfConfig":"71"},{"size":1816,"mtime":1610746202191,"results":"129","hashOfConfig":"71"},{"size":1912,"mtime":1610746202200,"results":"130","hashOfConfig":"71"},{"size":1858,"mtime":1610746202202,"results":"131","hashOfConfig":"71"},{"size":12007,"mtime":1610338397444,"results":"132","hashOfConfig":"71"},{"size":1495,"mtime":1608772653932,"results":"133","hashOfConfig":"71"},{"size":2668,"mtime":1611121469224,"results":"134","hashOfConfig":"71"},{"size":6269,"mtime":1610337835955,"results":"135","hashOfConfig":"71"},{"size":2133,"mtime":1609796886604,"results":"136","hashOfConfig":"71"},{"size":5805,"mtime":1611070198977,"results":"137","hashOfConfig":"71"},{"size":1738,"mtime":1611032001829,"results":"138","hashOfConfig":"71"},{"size":4332,"mtime":1610746202197,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"11g0qyk",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"142"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"142"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"142"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"142"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"142"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"142"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"142"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"142"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"142"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"142"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"142"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/index.js",[],["303","304"],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/serviceWorker.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/store.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/i18n.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/MainDrawer.js",["305"],"import React, {lazy, Suspense} from 'react';\nimport clsx from 'clsx';\nimport {createStyles, makeStyles, ThemeProvider} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\n\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport AppMenu from \"./AppMenu\";\nimport {AccountCircle} from \"@material-ui/icons\";\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {useDarkMode} from \"../../themeObject\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {SnackbarProvider} from \"notistack\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {useTranslation} from \"react-i18next\";\nimport UomView from \"../product-config/uom/UomView\";\nimport TaxView from \"../product-config/tax/TaxView\";\nimport CategoryView from \"../product-config/category/CategoryView\";\nimport SubCategoryView from \"../product-config/sub-category/SubCategoryView\";\nimport {QueryClient, QueryClientProvider} from \"react-query\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport ProductView from \"../product-config/product/ProductView\";\nimport CustomerView from \"../customer/CustomerView\";\nimport SupplierView from \"../supplier/SupplierView\";\nimport CustomBackdrop from \"../common/CustomBackdrop\";\nimport queryClient from \"../../hooks/queryClient\";\n\nconst drawerWidth = 270;\n\nconst PurchaseView = lazy(() => import(\"../purchase/PurchaseView\"));\nconst SaleView = lazy(() => import(\"../sale/SaleView\"));\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            height: '93.5vh',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n        },\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerClose: {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9) + 1,\n            },\n        },\n        toolbar: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n        },\n        grow: {\n            flexGrow: 1,\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n        sectionMobile: {\n            display: 'flex',\n            [theme.breakpoints.up('md')]: {\n                display: 'none',\n            },\n        },\n    }),\n);\n\nconst MainDrawer = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    const [theme, toggleDarkMode] = useDarkMode();\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const themeConfig = createMuiTheme(theme);\n    const [localeMenu, setLocaleMenu] = React.useState(null);\n    const {i18n} = useTranslation();\n    const locale = new Map([[\"en\", \"English\"], [\"sq\", \"Shqip\"]])\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={menuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n\n    function setLocale(locale) {\n        i18n.changeLanguage(locale);\n        setLocaleMenu(null);\n    }\n\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem aria-controls=\"locale-menu\" onClick={e => setLocaleMenu(e.currentTarget)}>\n                <IconButton\n                    color=\"inherit\"\n                >\n                    <TranslateIcon/>\n                </IconButton>\n                <p>{locale.get(i18n.language)}</p>\n            </MenuItem>\n            <Menu\n                id=\"locale-menu\"\n                anchorEl={localeMenu}\n                keepMounted\n                open={Boolean(localeMenu)}\n                onClose={() => setLocaleMenu(null)}\n            >\n                <MenuItem onClick={() => setLocale('en')}>{locale.get('en')}</MenuItem>\n                <MenuItem onClick={() => setLocale('sq')}>{locale.get('sq')}</MenuItem>\n            </Menu>\n            {theme.palette.type === 'dark' ?\n                (\n                    <MenuItem onClick={toggleDarkMode}>\n                        <IconButton\n                            color=\"inherit\"\n                        >\n                            <LightModeIcon/>\n                        </IconButton>\n                        <p>Light</p>\n                    </MenuItem>\n                ) :\n                (\n                    <MenuItem onClick={toggleDarkMode}>\n                        <IconButton\n                            color=\"inherit\"\n                        >\n                            <DarkModeIcon/>\n                        </IconButton>\n                        <p>Dark</p>\n                    </MenuItem>\n                )}\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <ThemeProvider theme={themeConfig}>\n                <SnackbarProvider maxSnack={3}>\n                    <BrowserRouter>\n                        <div className={classes.root}>\n                            <CssBaseline/>\n                            <AppBar\n                                style={{\n                                    background: theme.palette.primary.mainGradient,\n                                }}\n                                position=\"fixed\"\n                                className={clsx(classes.appBar, {\n                                    [classes.appBarShift]: open,\n                                })}\n                            >\n                                <Toolbar>\n                                    <IconButton\n                                        color=\"inherit\"\n                                        aria-label=\"open drawer\"\n                                        onClick={handleDrawerOpen}\n                                        edge=\"start\"\n                                        className={clsx(classes.menuButton, {\n                                            [classes.hide]: open,\n                                        })}\n                                    >\n                                        <MenuIcon/>\n                                    </IconButton>\n                                    <Typography variant=\"h6\" noWrap>\n                                        D&L POS\n                                    </Typography>\n                                    <div className={classes.grow}/>\n                                    <div className={classes.sectionDesktop}>\n                                        <Button aria-controls=\"locale-menu\"\n                                                aria-haspopup=\"true\"\n                                                color={\"inherit\"}\n                                                size={\"medium\"}\n                                                startIcon={<TranslateIcon/>}\n                                                endIcon={<ExpandMoreIcon/>}\n                                                onClick={e => setLocaleMenu(e.currentTarget)}>\n                                            {locale.get(i18n.language)}\n                                        </Button>\n                                        <Menu\n                                            id=\"locale-menu\"\n                                            anchorEl={localeMenu}\n                                            keepMounted\n                                            open={Boolean(localeMenu)}\n                                            onClose={() => setLocaleMenu(null)}\n                                        >\n                                            <MenuItem onClick={() => setLocale('en')}>{locale.get('en')}</MenuItem>\n                                            <MenuItem onClick={() => setLocale('sq')}>{locale.get('sq')}</MenuItem>\n                                        </Menu>\n                                        <Tooltip title={\"Toggle \" + theme.palette.type + \" theme\"}>\n                                            <IconButton aria-label=\"dark mode\" color=\"inherit\" onClick={toggleDarkMode}>\n                                                {theme.palette.type === 'dark' ? <LightModeIcon/> : <DarkModeIcon/>}\n                                            </IconButton>\n                                        </Tooltip>\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"account of current user\"\n                                            aria-controls={menuId}\n                                            aria-haspopup=\"true\"\n                                            onClick={handleProfileMenuOpen}\n                                            color=\"inherit\"\n                                        >\n                                            <AccountCircle/>\n                                        </IconButton>\n                                    </div>\n                                    <div className={classes.sectionMobile}>\n                                        <IconButton\n                                            aria-label=\"show more\"\n                                            aria-controls={mobileMenuId}\n                                            aria-haspopup=\"true\"\n                                            onClick={handleMobileMenuOpen}\n                                            color=\"inherit\"\n                                        >\n                                            <MoreIcon/>\n                                        </IconButton>\n                                    </div>\n                                </Toolbar>\n                            </AppBar>\n                            {renderMobileMenu}\n                            {renderMenu}\n                            <Drawer\n                                variant=\"permanent\"\n                                className={clsx(classes.drawer, {\n                                    [classes.drawerOpen]: open,\n                                    [classes.drawerClose]: !open,\n                                })}\n                                classes={{\n                                    paper: clsx({\n                                        [classes.drawerOpen]: open,\n                                        [classes.drawerClose]: !open,\n                                    }),\n                                }}\n                            >\n                                <div className={classes.toolbar}>\n                                    <IconButton onClick={handleDrawerClose}>\n                                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                                    </IconButton>\n                                </div>\n                                <AppMenu/>\n                            </Drawer>\n                            <main className={classes.grow}>\n                                <div className={classes.toolbar}/>\n                                <Suspense fallback={<CustomBackdrop/>}>\n                                    <Switch>\n                                        <Route path=\"/\" exact component={SaleView}/>\n                                        <Route path=\"/sale\" component={SaleView}/>\n                                        <Route path=\"/inventory-movement/purchase\" component={PurchaseView}/>\n                                        <Route path=\"/products\" component={ProductView}/>\n                                        <Route path=\"/categories\" component={CategoryView}/>\n                                        <Route path=\"/sub-categories\" component={SubCategoryView}/>\n                                        <Route path=\"/uom\" component={UomView}/>\n                                        <Route path=\"/taxes\" component={TaxView}/>\n                                        <Route path=\"/customers\" component={CustomerView}/>\n                                        <Route path=\"/suppliers\" component={SupplierView}/>\n                                        <Route path=\"/reports\" component={SaleView}/>\n                                        <Route path=\"/settings\" component={SaleView}/>\n                                        <Route path=\"/log-out\" component={SaleView}/>\n                                    </Switch>\n                                </Suspense>\n                            </main>\n                        </div>\n                        <ReactQueryDevtools initialIsOpen={true}/>\n                    </BrowserRouter>\n                </SnackbarProvider>\n            </ThemeProvider>\n        </QueryClientProvider>\n    );\n};\n\nexport default MainDrawer;","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/translations.js",["306"],"import enMessages from \"./locale/en\";\nimport sqMessages from \"./locale/sq\";\n\nexport default {\n    en: {\n        translation: enMessages\n    },\n    sq: {\n        translation: sqMessages\n    }\n};","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/AppMenu.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/themeObject.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/reducers/global/rootReducer.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/supplier/SupplierView.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/AppMenuItem.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/reducers/global/saleTabsReducer.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/locale/en.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/reducers/global/inventoryMovementReducer.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/i18n/locale/sq.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/SubCategoryIcon.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/ProductConfigIcon.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/TaxIcon.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/icons/UomIcon.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/Tools.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/SaleTable.js",["307"],"import React, {lazy, useEffect, useState} from 'react';\nimport MaterialTable from 'material-table';\nimport {AxiosTicketLineClient} from \"../../client/Client\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Actions} from \"../../reducers/global/saleTabsReducer\";\nimport {useMutation} from \"react-query\";\nimport QtyTextField from \"./QtyTextField\";\n\nconst ConfirmationDialog = lazy(() => import(\"../common/ConfirmationDialog\"));\n\nconst ticketLineService = new AxiosTicketLineClient();\n\nexport default function SaleTable({searchRef, qtyRef, setDisablePayButton, tableLoading, setTableLoading}) {\n    console.log(\"Inside Sale Table\");\n\n    const dispatch = useDispatch();\n    const [yesNoDialog, setYesNoDialog] = useState({open: false, itemsToRemove: []});\n    const [errors, setErrors] = useState([]);\n    const ticketLines = useSelector((state) => state.tabs.tickets[state.tabs.selectedIndex].ticketLines);\n    const {mutate: deleteSelectedLines, isLoading: deleteLinesLoading} = useMutation(lines => ticketLineService.deleteAll(lines), {\n        onSuccess: () => {\n            dispatch({type: Actions.REMOVE_TICKET_LINE, payload: yesNoDialog.itemsToRemove});\n            setYesNoDialog({itemsToRemove: [], open: false})\n        }\n    });\n\n    useEffect(() => {\n        setDisablePayButton(errors.length > 0 && errors.some(x => x))\n    }, [errors]);\n\n    const columns = [\n        {title: '#', field: 'tableData.id', editable: \"never\", width: \"1%\", cellStyle: {padding: 0}},\n        {title: 'Code', field: \"product.code\", width: \"20%\", cellStyle: {padding: \"0 .5em 0 0\"}},\n        {title: 'Name', field: \"product.name\", width: \"40%\", cellStyle: {padding: \"0 .5em 0 0\"}},\n        {\n            title: 'Qty',\n            field: 'quantity',\n            type: 'numeric',\n            editable: \"never\",\n            initialEditValue: 1,\n            width: \"1%\",\n            cellStyle: {padding: \"0 .5em 0 0\"},\n            render: rowData => <QtyTextField\n                rowData={rowData}\n                searchRef={searchRef}\n                qtyRef={qtyRef}\n                setTableLoading={setTableLoading}\n                setErrors={setErrors}\n            />\n        },\n        {title: 'Price', field: 'product.priceTax', type: 'numeric', width: \"1%\", cellStyle: {padding: \"0 .5em 0 0\"}},\n        {\n            title: 'Amount',\n            field: 'amount',\n            type: 'numeric',\n            editable: \"never\",\n            width: \"1%\",\n            cellStyle: {padding: \"0 .5em 0 0\"}\n        },\n    ];\n\n    function openDeleteSelectedConfirmationDialog(event, data) {\n        event.preventDefault();\n        setYesNoDialog({open: true, itemsToRemove: data});\n    }\n\n    return (\n        <Paper square variant=\"outlined\">\n            <MaterialTable\n                title=\"Ticket\"\n                isLoading={tableLoading}\n                columns={columns}\n                data={ticketLines}\n                options={{\n                    selection: true,\n                    draggable: true,\n                    paging: false,\n                    maxBodyHeight: \"60vh\",\n                    rowStyle: {\n                        padding: 0,\n                    },\n                    headerStyle: {\n                        padding: 0,\n                    },\n                    loadingType: 'linear'\n                }}\n                actions={[\n                    {\n                        icon: 'delete',\n                        onClick: openDeleteSelectedConfirmationDialog\n                    }\n                ]}\n            />\n            {yesNoDialog.open && (\n                <ConfirmationDialog title={\"Are you sure want do delete all selected records?\"}\n                                    content={`There are (${yesNoDialog.itemsToRemove.length}) records to be deleted`}\n                                    open={yesNoDialog.open}\n                                    handleClose={() => setYesNoDialog(prevState => ({...prevState, open: false}))}\n                                    handleConfirmation={() => deleteSelectedLines(yesNoDialog.itemsToRemove)}\n                                    loading={deleteLinesLoading}\n                />\n            )}\n        </Paper>\n    );\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/TabPanel.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/Summary.js",["308"],"import Paper from \"@material-ui/core/Paper\";\nimport {useSelector} from \"react-redux\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\nimport {formatMoney} from \"../../services/utils\";\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        totalPaper: {\n            marginTop: \"auto\",\n            display: \"flex\",\n            padding: \"1em\"\n        },\n        totalAmount: {\n            marginLeft: \"auto\"\n        }\n    }),\n);\n\nexport default function Summary({total}) {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.totalPaper} variant=\"outlined\" square>\n            <Typography variant=\"h4\">\n                Total:\n            </Typography>\n            <Typography variant=\"h4\" className={classes.totalAmount}>\n                {formatMoney(total)}\n            </Typography>\n        </Paper>\n    )\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/utils.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ProgressButton.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ValidTextField.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/AutocompleteDropdown.js",["309"],"import React, {useEffect} from \"react\";\nimport Autocomplete, {createFilterOptions} from \"@material-ui/lab/Autocomplete\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport ValidTextField from \"./ValidTextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst filter = createFilterOptions();\n\nfunction AutocompleteDropdown({\n                                  props,\n                                  label,\n                                  icon,\n                                  required,\n                                  error,\n                                  variant = 'standard',\n                                  minWidth = 180,\n                                  items,\n                                  enableAddOption = false,\n                                  inputRef = undefined,\n                                  isLoading\n                              }) {\n    console.log(\"Inside AutocompleteDropdown\");\n\n    const finalIcon = isLoading ? <CircularProgress style={{ width: \"1.2em\", height: \"1.2em\" }}/> : icon;\n\n    return (\n        <>\n            <Autocomplete\n                {...props}\n                id={label}\n                filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n\n                    if (enableAddOption && params.inputValue !== '') {\n                        filtered.push({\n                            inputValue: params.inputValue,\n                            name: `Add \"${params.inputValue}\"`,\n                        });\n                    }\n\n                    return filtered;\n                }}\n                options={items}\n                getOptionLabel={(option) => {\n                    // e.g value selected with enter, right from the input\n                    if (typeof option === 'string') {\n                        return option;\n                    }\n                    if (option.inputValue) {\n                        return option.inputValue;\n                    }\n                    return option.name;\n                }}\n                disabled={isLoading || props.disabled}\n                selectOnFocus\n                autoHighlight\n                clearOnEscape\n                handleHomeEndKeys\n                renderOption={(option) => option.name}\n                style={{minWidth: minWidth}}\n                freeSolo\n                renderInput={(params) => (\n                    finalIcon ?\n                        <ValidTextField {...params} error={error} required={required} label={label} variant={variant}\n                                        inputRef={inputRef}\n                                        InputProps={{\n                                            ...params.InputProps,\n                                            startAdornment: (\n                                                <InputAdornment position=\"start\">\n                                                    {finalIcon}\n                                                </InputAdornment>\n                                            ),\n                                        }}/> :\n                        <ValidTextField {...params} error={error} required={required} label={label} variant={variant}\n                                        inputRef={inputRef}/>\n                )}\n            />\n        </>\n    );\n}\n\nexport default AutocompleteDropdown;","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/hooks/useFetch.js",["310","311"],"import {useEffect, useState} from \"react\";\nimport {useSnackbar} from \"notistack\";\nimport axios, {CancelTokenSource} from \"axios\";\n\n\n\nexport function useFindAll(request, errorMessage) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const {enqueueSnackbar} = useSnackbar();\n\n    function fireCall() {\n        setLoading(true);\n        return request.apply(this, Array.prototype.slice.call(arguments))\n            .then(x => x.data)\n            .then(x => {\n                setData(x);\n                setLoading(false);\n                return x;\n            })\n            .catch(error => {\n                const message = errorMessage ?\n                    errorMessage :\n                    'Unexpected error occurred, please contact support for more information.\\n' + JSON.stringify(error.response?.data);\n                enqueueSnackbar(message, {variant: \"error\"});\n                setLoading(false)\n            });\n    }\n\n    return [fireCall, data, loading, setData];\n}\n\nexport function useCancelerFindAll(request, errorMessage) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const {enqueueSnackbar} = useSnackbar();\n    let source = axios.CancelToken.source();\n\n    function fireCall() {\n        setLoading(true);\n        source && source.cancel();\n        // create the new request for cancellation\n        source = axios.CancelToken.source();\n\n        return request.apply(this, Array.prototype.slice.call([...arguments, source.token]))\n            .then(x => x.data)\n            .then(x => {\n                setData(x);\n                setLoading(false);\n                return x;\n            })\n            .catch(error => {\n                if (axios.isCancel(error)) {\n                    return;\n                }\n                const message = errorMessage ?\n                    errorMessage :\n                    'Unexpected error occurred, please contact support for more information.\\n' + JSON.stringify(error.response?.data);\n                enqueueSnackbar(message, {variant: \"error\"});\n                setLoading(false)\n            });\n    }\n\n    return [fireCall, data, loading, setData];\n}\n\nexport function useMultipleFindAll(requests, errorMessage) {\n\n    const [data, setData] = useState({data: [...requests.map(() => [])], progress: 'idle'});\n    const {enqueueSnackbar} = useSnackbar();\n\n    function fireCall() {\n        if (data.progress === 'done') {\n            setData({data: [...requests.map(() => [])], progress: 'loading'});\n        }\n        Promise.all(requests.map(x => x()))\n            .then(x => x.map(x => x.data))\n            .then(x => setData({data: x, progress: 'done'}))\n            .catch(error => {\n                const message = errorMessage ?\n                    errorMessage :\n                    'Unexpected error occurred, please contact support for more information.\\n' + JSON.stringify(error.response?.data);\n                enqueueSnackbar(message, {variant: \"error\"});\n                setData({...data, progress: 'error'});\n            });\n    }\n\n    function setDataForIndex(index, newValue) {\n        return setData(prev => {\n            const newData = [...prev.data];\n            newData[index] = newValue(newData[index]);\n            return {...prev, data: newData};\n        });\n    }\n\n    return [fireCall, data, setDataForIndex];\n}\n\nexport function useFindOne(request, errorMessage) {\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [errors, setErrors] = useState();\n    const {enqueueSnackbar} = useSnackbar();\n\n    function fireCall() {\n        setLoading(false);\n        return request()\n            .then(x => x.data)\n            .then(x => {\n                setData(x);\n                setLoading(false)\n            })\n            .catch(error => {\n                if (error.response?.status !== 400) {\n                    const message = errorMessage ?\n                        errorMessage :\n                        'Unexpected error occurred, please contact support for more information.\\n' + error.response?.data;\n                    enqueueSnackbar(message, {variant: \"error\"});\n                }\n                setErrors(error.response?.data);\n                setLoading(false)\n            });\n    }\n\n    return [fireCall, data, loading, errors];\n}\n\nexport function useSave(request, initialState = {\n    data: undefined,\n    loading: false,\n    errors: undefined\n}, errorMessage) {\n\n    const [state, setState] = useState(initialState);\n    const {enqueueSnackbar} = useSnackbar();\n\n    function save(payload) {\n        setState({\n            ...initialState,\n            loading: true,\n        });\n\n        return request(payload)\n            .then(x => {\n                setState({\n                    data: x.data,\n                    loading: false,\n                    errors: {}\n                });\n                return x.data;\n            })\n            .catch(error => {\n                if (error.response.status !== 400) {\n                    const message = errorMessage ?\n                        errorMessage :\n                        'Unexpected error occurred, please contact support for more information.\\n' + error.response?.data;\n                    enqueueSnackbar(message, {variant: \"error\"});\n                }\n                setState({\n                    data: {},\n                    errors: error.response?.data,\n                    loading: false\n                });\n                return Promise.reject(error.response?.data);\n            });\n    }\n\n    return [save, state, setState];\n}\n\nconst initialState = {\n    data: undefined,\n    progress: 'idle',\n    errors: undefined\n};\n\nexport function useSaveWithCallback(request, afterSave = () => {}) {\n    const [state, setState] = useState(initialState);\n    const {enqueueSnackbar} = useSnackbar();\n\n    function save(payload) {\n        setState({\n            ...initialState,\n            progress: 'loading',\n        });\n        return request(payload)\n            .then(x => {\n                afterSave(x.data);\n                setState({\n                    data: x.data,\n                    progress: 'done',\n                    errors: {}\n                });\n                return x.data;\n            })\n            .catch(error => {\n                if (error.response.status !== 400) {\n                    const message = 'Unexpected error occurred, please contact support for more information.\\n' + JSON.stringify(error.response?.data);\n                    enqueueSnackbar(message, {variant: \"error\"});\n                }\n                setState({\n                    data: {},\n                    errors: error.response?.data,\n                    progress: 'error'\n                });\n                return Promise.reject(error.response?.data);\n            });\n    }\n\n    return [save, state, setState];\n}\n\nexport function useOnce(request, response, initialState = {\n    data: {},\n    loading: true,\n    errors: {}\n}, errorMessage) {\n\n    const [state, setState] = useState(initialState);\n    const {enqueueSnackbar} = useSnackbar();\n\n    useEffect(() => {\n        request()\n            .then(x => {\n                response(x.data);\n                setState({\n                    data: x.data,\n                    loading: false,\n                    errors: {}\n                });\n            }).catch(error => {\n            if (error.response?.status !== 400) {\n                const message = errorMessage ?\n                    errorMessage :\n                    'Unexpected error occurred, please contact support for more information.\\n' + JSON.stringify(error.response?.data);\n                enqueueSnackbar(message, {variant: \"error\"});\n            }\n            setState({\n                errors: error.response?.data,\n                loading: false\n            });\n            return Promise.reject(error.response?.data);\n        });\n    }, []);\n\n    return [state.data, state.loading, state.errors];\n}\n\nexport function useDeleteAll(request, errorMessage) {\n    const [loading, setLoading] = useState(false);\n    const {enqueueSnackbar} = useSnackbar();\n\n    function deleteAll(data) {\n        setLoading(true);\n        return request(data)\n            .then(x => {\n                setLoading(false);\n                return x.data\n            })\n            .catch(error => {\n                const message = errorMessage ?\n                    errorMessage :\n                    'Unexpected error occurred, please contact support for more information.\\n' + JSON.stringify(error.response?.data);\n                enqueueSnackbar(message, {variant: \"error\"});\n                setLoading(false)\n            })\n    }\n\n    return [deleteAll, loading];\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/client/Client.ts",[],["312","313"],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/sub-category/NewSubCategory.js",["314"],"import {AxiosCategoryClient, AxiosSubCategoryClient, QueryKeys} from \"../../../client/Client\";\nimport React from \"react\";\nimport FormDialog from \"../../common/FormDialog\";\nimport AutocompleteDropdown from \"../../common/AutocompleteDropdown\";\nimport SubCategoryIcon from \"../../icons/SubCategoryIcon\";\nimport {emptySubCategory} from \"../../../services/EmptyObjects\";\nimport {useMutation, useQuery, useQueryClient} from \"react-query\";\n\nconst subCategoryService = new AxiosSubCategoryClient();\n\nexport default function NewSubCategory({refreshTable, isOpen, setOpen}) {\n    console.log(\"Inside NewSubCategory!\");\n\n    const queryClient = useQueryClient();\n    const {data: categories} = useQuery(QueryKeys.CATEGORIES);\n    const {mutate: saveSubCategory, error, loading, reset} = useMutation(x => subCategoryService.create(x.data), {\n        onSuccess: (data, variables) => {\n            setOpen(false);\n            variables.reset();\n            refreshTable();\n            if (queryClient.getQueryData(QueryKeys.SUB_CATEGORIES)) {\n                queryClient.setQueryData(QueryKeys.SUB_CATEGORIES, old => [...old, data]);\n            }\n        }\n    });\n    const errors = error?.response?.data;\n\n    const fields = [\n        {\n            title: 'Name',\n            field: \"name\",\n        },\n        {\n            title: 'Category',\n            field: 'category',\n            customElement: (subCategory, setSubCategory) => <AutocompleteDropdown\n                props={{\n                    onChange: (event, newValue) => handleCategoryChange(event, newValue, subCategory, setSubCategory)\n                }}\n                label={'Category'}\n                required\n                error={errors && errors['category']}\n                variant=\"standard\"\n                items={categories}/>\n        }\n    ];\n\n    function handleCategoryChange(event, newValue, subCategory, setSubCategory) {\n        event.preventDefault();\n        if (newValue && newValue.inputValue) {\n            setSubCategory({...subCategory.current, category: null});\n        } else {\n            setSubCategory({...subCategory.current, category: newValue});\n        }\n    }\n\n    function handleSubmit(event, subCategory, reset) {\n        saveSubCategory({data: subCategory, reset: reset})\n    }\n\n    function handleClose() {\n        setOpen(false);\n        reset();\n    }\n\n    return (\n        <FormDialog\n            open={isOpen}\n            title=\"Add Sub-Category\"\n            onSubmit={handleSubmit}\n            onClose={handleClose}\n            fields={fields}\n            errors={errors}\n            loading={loading}\n            icon={<SubCategoryIcon/>}\n            initialObject={emptySubCategory}\n        />\n    )\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/fetch.tsx",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/IntTextField.js",[],["315","316"],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/EmptyObjects.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/services/HttpErrorHandling.tsx",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/FormDialog.js",["317","318","319"],"import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ValidTextField from \"./ValidTextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport Box from \"@material-ui/core/Box\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom ref={ref} {...props} />;\n});\n\nfunction FormDialog({\n                        open, title, onSubmit, onClose, focusSubmit = false, fields, errors, loading, icon, customBody,\n                        onValueChange = () => {\n                        }, initialObject = {}, autoFocusIndex\n                    }) {\n\n    const object = useRef(initialObject);\n    const setObject = obj => object.current = obj;\n    const theme = useTheme();\n    const classes = useStyles();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    console.log(\"Inside form dialog!\");\n\n    return (\n        <Dialog open={open} onClose={onClose} fullScreen={fullScreen} TransitionComponent={Transition} aria-labelledby=\"form-dialog-title\">\n            <form>\n                <DialogTitle id=\"form-dialog-title\" style={{backgroundColor: theme.palette.background.default}}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <div style={{display: \"flex\", color: theme.palette.primary.main, marginRight: \"0.5em\"}}>\n                            {icon}\n                        </div>\n                        {title}\n                    </Box>\n                </DialogTitle>\n                <Divider style={{backgroundColor: theme.palette.primary.main}}/>\n                <DialogContent style={{overflowY: \"hidden\", margin: '2em'}}>\n                    {customBody ? (customBody) :\n                        <Grid container className={classes.root} justify='center' spacing={4}>\n                            {fields.map((item, index) => {\n                                return (\n                                    <Grid item key={index}>\n                                        {item.customElement ?\n                                            item.customElement(object, setObject)\n                                            : <ValidTextField\n                                                onKeyPress={(ev) => {\n                                                    if (ev.key === 'Enter') {\n                                                        ev.preventDefault();\n                                                    }\n                                                }}\n                                                onChange={event => {\n                                                    onValueChange(item.field, event.target.value, object.current, setObject);\n                                                    setObject({\n                                                        ...object.current,\n                                                        [item.field]: event.target.value\n                                                    });\n                                                }\n                                                }\n                                                autoFocus={autoFocusIndex ? index === autoFocusIndex : index === 0}\n                                                required={item.required}\n                                                error={errors && errors[item.field]}\n                                                id={item.field}\n                                                defaultValue={object.current[item.field]}\n                                                label={item.title}\n                                                type={item.type ? item.type : 'text'}\n                                            />\n                                        }\n                                    </Grid>\n                                )\n                            })\n                            }\n                        </Grid>}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose}\n                            color=\"secondary\"\n                            variant={\"outlined\"}\n                            style={{margin: '1em'}}\n                            startIcon={<CancelOutlinedIcon/>}>\n                        Cancel\n                    </Button>\n                    <Button autoFocus={focusSubmit}\n                            onClick={event => onSubmit(event, object.current, () => setObject(initialObject))}\n                            color=\"primary\"\n                            variant={\"outlined\"}\n                            style={{margin: '1em'}}\n                            startIcon={loading ? <CircularProgress size={20}/> : <AddCircleOutlineIcon/>}\n                            disabled={loading}>\n                        Add\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    )\n}\n\nexport default FormDialog;","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ConfirmationDialog.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/GradientButton.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/ProductTile.js",["320","321","322","323"],"import React, {useEffect} from 'react';\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\nimport {GridListTile} from \"@material-ui/core\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport noImage from '../../static/noimage.png';\nimport {useDispatch} from \"react-redux\";\nimport Grow from \"@material-ui/core/Grow\";\nimport {Actions} from \"../../reducers/global/saleTabsReducer\";\nimport {AxiosTicketClient, AxiosTicketLineClient, TicketLinePayload} from \"../../client/Client\";\nimport {fetch} from \"../../services/fetch\";\nimport {useSaveWithCallback} from \"../../hooks/useFetch\";\nimport store from \"../../store\";\nimport {useMutation} from \"react-query\";\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        productTile: {\n            cursor: 'pointer',\n            width: '14em',\n            height: \"9em\",\n            margin: \".5em\",\n            borderRadius: '5px',\n            backgroundColor: \"lightgrey\",\n            '& > :hover': {\n                border: `1px solid ${theme.palette.primary.main}`,\n                borderRadius: '5px',\n                boxShadow: `0px 0px 2px 2px ${theme.palette.primary.main}`,\n            },\n            '& img': {\n                width: '100%',\n                height: '100%',\n                padding: '5px'\n            },\n        }\n    }),\n);\n\nconst ticketService = new AxiosTicketClient();\n\nfunction addTicketLinePromise(ticketLine) {\n    const tabs = store.getState().tabs;\n    const ticketId = tabs.tickets[tabs.selectedIndex].id;\n\n    return ticketService.addTicketLine(ticketId, ticketLine).then(x => x.data)\n}\n\nexport default function ProductTile({index, product, setTableLoading}) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const {mutate: addTicketLine, isLoading: addTicketLineLoading} = useMutation(addTicketLinePromise, {\n        onSuccess: x => dispatch({type: Actions.UPDATE_SELECTED_TICKET, payload: x})\n    });\n\n    useEffect(() => setTableLoading(addTicketLineLoading), [addTicketLineLoading]);\n\n    function handleInformationButton(event) {\n        event.preventDefault();\n        return undefined;\n    }\n\n    function handleProductClick() {\n        addTicketLine(new TicketLinePayload({\n            product: product,\n            quantity: 1,\n        }));\n    }\n\n    return (\n        <Grow\n            in={true}\n            style={{transformOrigin: '0 0 0'}}\n            {...({timeout: index * 50})}\n        >\n            <GridListTile key={product.code} className={classes.productTile} onClick={handleProductClick}>\n                <img src={product.image ? product.image : noImage} alt={product.name}/>\n                <GridListTileBar\n                    title={product.name}\n                    subtitle={<span>{product.code}</span>}\n                    actionIcon={\n                        <IconButton aria-label={`info about ${product.name}`} onClick={handleInformationButton}>\n                            <InfoIcon/>\n                        </IconButton>\n                    }\n                />\n            </GridListTile>\n        </Grow>\n    )\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/drawer/AppMenuItemComponent.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ValidTableCell.js",["324"],"import React from \"react\";\n\nexport default function ValidTableCell(props, errorsRef, component, extraProps = {}) {\n    const newProps = {\n        type: props.columnDef.type === 'numeric' ? 'number' : 'text',\n        error: errorsRef.current && errorsRef.current[props.columnDef.field],\n        id: props.columnDef.field,\n        value: props.value,\n        onChange: (event) => props.onChange(event.target.value),\n        label: props.columnDef.title,\n        required: props.columnDef.required\n    };\n\n    return component({...newProps, ...extraProps});\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/product/NewProduct.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/tax/NewTax.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/uom/NewUom.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/category/NewCategory.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/customer/NewCustomer.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/supplier/NewSupplier.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/PurchaseTable.js",["325"],"import React, {lazy, useEffect, useState} from 'react';\nimport {AxiosInventoryMovementLineClient, MovementKind} from \"../../client/Client\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MaterialTable from \"material-table\";\nimport {deleteInventoryMovementLines} from \"../../reducers/global/inventoryMovementReducer\";\nimport {useMutation} from \"react-query\";\nimport QtyTextField from \"./QtyTextField\";\n\nconst ConfirmationDialog = lazy(() => import(\"../common/ConfirmationDialog\"));\n\nconst movementKind = MovementKind.PURCHASE;\nconst inventoryMovementLineService = new AxiosInventoryMovementLineClient();\n\nconst PurchaseTable = ({searchProductRef, setDisableCloseButton, tableLoading, setTableLoading}) => {\n\n    console.log(\"Inside Purchase table\");\n\n    const dispatch = useDispatch();\n    const [yesNoDialog, setYesNoDialog] = useState({open: false, itemsToRemove: []});\n    const {mutate: deleteSelectedLines, isLoading: deleteLinesLoading} = useMutation(lines => inventoryMovementLineService.deleteAll(lines), {\n        onSuccess: () => {\n            deleteInventoryMovementLines(movementKind, yesNoDialog.itemsToRemove, dispatch);\n            setYesNoDialog({itemsToRemove: [], open: false})\n        }\n    });\n    const purchaseLines = useSelector((state) => state.inventoryMovement.get(movementKind).inventoryMovementLines);\n    const [errors, setErrors] = useState([]);\n\n    useEffect(() => {\n        setDisableCloseButton(errors.length > 0 && errors.some(x => x))\n    }, [errors]);\n\n    const columns = [\n        {title: '#', field: 'tableData.id', editable: \"never\", width: \"1%\", cellStyle: {padding: 0}},\n        {title: 'Code', field: \"product.code\", width: \"20%\", cellStyle: {padding: 0}},\n        {title: 'Name', field: \"product.name\", width: \"30%\", cellStyle: {padding: 0}},\n        {title: 'Category', field: \"product.category.name\", width: \"20%\", cellStyle: {padding: 0}},\n        {\n            title: 'Qty',\n            field: 'quantity',\n            type: 'numeric',\n            width: \"1%\",\n            render: rowData => <QtyTextField\n                rowData={rowData}\n                searchProductRef={searchProductRef}\n                setErrors={setErrors}\n                setTableLoading={setTableLoading}\n            />,\n            cellStyle: {padding: 0}\n        },\n        /*{title: 'UOM', field: 'product.uom.smallerUnitName', width: \"5%\", editable: \"never\", cellStyle: {padding: 0}},*/\n        {title: 'Price buy', field: 'product.priceBuy', type: 'numeric', width: \"10%\", cellStyle: {padding: 0}},\n        {title: 'Price sell', field: 'product.priceSell', type: 'numeric', width: \"10%\"},\n        {\n            title: 'Tax', field: 'product.tax.name', cellStyle: {paddingLeft: \"1em\"}, headerStyle: {paddingLeft: \"1em\"}\n        },\n        {title: 'Price tax', field: 'product.priceTax', type: 'numeric', width: \"10%\", cellStyle: {padding: 0}},\n        {\n            title: 'Amount',\n            field: 'amount',\n            type: 'numeric',\n            editable: \"never\",\n            width: \"15%\",\n            cellStyle: {paddingRight: '1em'},\n            headerStyle: {paddingRight: '1em'}\n        },\n    ];\n\n    function openDeleteSelectedConfirmationDialog(event, data) {\n        event.preventDefault();\n        setYesNoDialog({open: true, itemsToRemove: data});\n    }\n\n    return (\n        <Paper square variant=\"outlined\">\n            <MaterialTable\n                isLoading={tableLoading}\n                title=\"Purchase\"\n                columns={columns}\n                data={purchaseLines}\n                options={{\n                    actionsColumnIndex: -1,\n                    selection: true,\n                    draggable: true,\n                    paging: false,\n                    search: false,\n                    maxBodyHeight: \"60vh\",\n                    loadingType: \"linear\",\n                    rowStyle: {\n                        padding: 0,\n                    },\n                    headerStyle: {\n                        padding: 0,\n                    }\n                }}\n                actions={[\n                    {\n                        tooltip: 'Remove selected rows',\n                        icon: 'delete',\n                        onClick: openDeleteSelectedConfirmationDialog\n                    }\n                ]}\n            />\n            {yesNoDialog.open && (\n                <ConfirmationDialog title={\"Are you sure want do delete all selected records?\"}\n                                    content={`There are (${yesNoDialog.itemsToRemove.length}) records to be deleted`}\n                                    open={yesNoDialog.open}\n                                    handleClose={() => setYesNoDialog(prevState => ({...prevState, open: false}))}\n                                    handleConfirmation={() => deleteSelectedLines(yesNoDialog.itemsToRemove)}\n                                    loading={deleteLinesLoading}\n                />\n            )}\n        </Paper>\n    );\n};\n\nexport default PurchaseTable;","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/PurchaseHeader.js",["326","327","328","329"],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/CategoriesDrawer.js",["330","331"],"import Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport React, {useEffect, useState} from \"react\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport {AxiosCategoryClient, QueryKeys} from \"../../client/Client\";\nimport Button from \"@material-ui/core/Button\";\nimport {useQuery} from \"react-query\";\nimport Box from \"@material-ui/core/Box\";\nimport SubCategoryIcon from \"../icons/SubCategoryIcon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n}));\n\nconst categoryService = new AxiosCategoryClient();\n\nfunction CategoriesDrawer({open, handleDrawerClose, onChange}) {\n\n    console.log(\"Inside Categories Drawer\");\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [openTooltip, setOpenTooltip] = useState(-1);\n    const [selected, setSelected] = useState();\n    const [buttons, setButtons] = useState(new Array(9));\n\n    const {data: categories, isLoading} = useQuery([QueryKeys.CATEGORIES, {include: QueryKeys.SUB_CATEGORIES}],\n        () => categoryService.findAll({include: 'subCategories'}).then(x => x.data));\n\n    useEffect(() => {\n        if (!selected && categories && categories.length) {\n            setButtons(categories);\n            setSelected(categories[0]);\n        }\n    }, [categories]);\n\n    useEffect(() => {\n        if (selected) {\n            onChange({id: selected.id, isCategory: !!selected.subCategories});\n        }\n    }, [selected]);\n\n    const handleCategoryButton = (newValue) => {\n        if (!newValue)\n            return;\n\n        setSelected(newValue);\n    };\n\n\n    function handleSubCategoryButton(newValue, index) {\n        if (!newValue.subCategories || !newValue.subCategories.length) {\n            setOpenTooltip(index);\n            setTimeout(() => {\n                setOpenTooltip(-1);\n            }, 3000);\n        } else {\n            setButtons(newValue.subCategories);\n            setSelected(newValue.subCategories[0]);\n        }\n    }\n\n    function handleBackButton() {\n        setSelected(categories[0]);\n        setButtons(categories);\n    }\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"right\"\n            open={open}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <div className={classes.drawerHeader}>\n                {selected?.name}\n            </div>\n            <div className={classes.drawerHeader}>\n                <IconButton onClick={handleDrawerClose}>\n                    <ChevronRightIcon/>\n                </IconButton>\n            </div>\n            {selected && !selected.subCategories && (\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    startIcon={<ArrowBackIosIcon/>}\n                    onClick={handleBackButton}\n                >\n                    Back to categories\n                </Button>\n            )}\n            <Divider/>\n            {\n                <ToggleButtonGroup orientation=\"vertical\" value={selected}\n                                   exclusive\n                >\n                    {buttons.map((x, index) => (\n                        isLoading || !selected || !x ?\n                            (<Box key={index} maxWidth={\"14em\"} maxHeight={\"9em\"}><Skeleton><Avatar/></Skeleton></Box>)\n                            :\n                            (\n                                <div key={index}>\n                                    <Box display=\"flex\">\n                                        <Box flexGrow={1}>\n                                            <ToggleButton value={x}\n                                                          aria-label=\"list\"\n                                                          onClick={() => handleCategoryButton(x)}\n                                                          style={{\n                                                              width: '100%',\n                                                              border: \"none\"\n                                                          }}\n                                            >\n                                                <ViewListIcon style={{\n                                                    marginRight: '0.5em',\n                                                    color: selected === x ? theme.palette.primary.main : theme.palette.text.secondary\n                                                }}/>\n                                                {x.name}\n                                            </ToggleButton>\n                                        </Box>\n                                        {\n                                            x.subCategories && <Box>\n                                                <Tooltip\n                                                    key={index}\n                                                    PopperProps={{\n                                                        disablePortal: true,\n                                                    }}\n                                                    onClose={() => setOpenTooltip(-1)}\n                                                    open={openTooltip === index}\n                                                    disableFocusListener\n                                                    disableHoverListener\n                                                    disableTouchListener\n                                                    title={\"No subcategories exist for \" + x.name}\n                                                >\n                                                    <IconButton aria-label=\"delete\" color=\"primary\"\n                                                                onClick={() => handleSubCategoryButton(x, index)}>\n                                                        <SubCategoryIcon/>\n                                                        <ChevronRightIcon/>\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Box>\n                                        }\n                                    </Box>\n                                    <Divider/>\n                                </div>\n                            )\n                    ))}\n                </ToggleButtonGroup>\n            }\n        </Drawer>\n    );\n}\n\nexport default React.memo(CategoriesDrawer);","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/ValidCheckBox.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/hooks/useTraceUpdate.js",[],["332","333"],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/ProductDropdown.js",["334","335","336"],"import React, {lazy, useCallback, useEffect, useState} from 'react';\nimport {emptyProduct} from \"../../services/EmptyObjects\";\nimport FastFoodIcon from '@material-ui/icons/Fastfood';\nimport AutocompleteDropdown from \"../common/AutocompleteDropdown\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createInventoryMovementLine} from \"../../reducers/global/inventoryMovementReducer\";\nimport {AxiosInventoryMovementClient, InventoryMovementLinePayload, MovementKind, QueryKeys} from \"../../client/Client\";\nimport store from \"../../store\";\nimport {useMutation, useQuery} from \"react-query\";\n\nconst NewProduct = lazy(() => import(\"../product-config/product/NewProduct\"));\n\nconst inventoryMovementService = new AxiosInventoryMovementClient();\nconst kind = MovementKind.PURCHASE;\n\nfunction addInventoryMovementLinePromise(inventoryMovementLine) {\n    const inventoryMovementId = store.getState().inventoryMovement.get(kind).id;\n\n    return inventoryMovementService.addInventoryMovementLine(inventoryMovementId, inventoryMovementLine).then(x => x.data)\n}\n\nexport default function ProductDropdown({searchProductRef, setTableLoading}) {\n    console.log(\"Inside ProductDropdown\");\n\n    const [open, setOpen] = useState(false);\n    const [name, setName] = useState('');\n    const [key, resetAutocompleteInput] = useState(false);\n\n    const {data: products, isLoading: productsLoading} = useQuery(QueryKeys.PRODUCTS);\n    const {mutate: addInventoryMovementLine, isLoading} = useMutation(addInventoryMovementLinePromise, {\n        onSuccess: data => createInventoryMovementLine(kind, data.inventoryMovementLines[data.inventoryMovementLines.length - 1], dispatch),\n    });\n\n    const supplier = useSelector(x => x.inventoryMovement.get(kind).supplier);\n    const dispatch = useDispatch();\n\n    useEffect(() => setTableLoading(isLoading), [isLoading]);\n\n    const handleSavedProduct = useCallback(savedProduct => {\n        productChanged(savedProduct);\n    }, []);\n\n    const handleChange = useCallback((event, newValue) => {\n        event.preventDefault();\n        if (typeof newValue === 'string') {\n            const productByCode = products.find(x => x.code === newValue);\n            if (productByCode) {\n                productChanged(productByCode);\n                return;\n            }\n            setName(newValue);\n            setOpen(true);\n        } else if (newValue && newValue.inputValue) {\n            const productByCode = products.find(x => x.code === newValue.inputValue);\n            if (productByCode) {\n                productChanged(productByCode);\n                return;\n            }\n            setName(newValue.inputValue);\n            setOpen(true);\n        } else if (newValue) {\n            productChanged(newValue);\n        }\n    }, []);\n\n    const autoCompleteProps = {\n        key: key,\n        defaultValue: emptyProduct,\n        onChange: handleChange,\n        disabled: !supplier || !supplier.id\n    };\n\n    function productChanged(newValue) {\n        handleValueChange(newValue);\n        resetAutocompleteInput(prev => !prev);\n    }\n\n    const handleValueChange = (value) => {\n        if (value) {\n            addInventoryMovementLine(new InventoryMovementLinePayload({\n                product: value,\n                quantity: 1\n            }));\n        }\n    };\n\n    return (\n        <>\n            <AutocompleteDropdown\n                label=\"Product\"\n                variant=\"outlined\"\n                icon={<FastFoodIcon/>}\n                required\n                items={products}\n                enableAddOption\n                minWidth={250}\n                props={autoCompleteProps}\n                inputRef={searchProductRef}\n                isLoading={productsLoading}\n            />\n            {open && (\n                <NewProduct\n                    isOpen={open}\n                    setOpen={x => setOpen(x)}\n                    savedProduct={handleSavedProduct}\n                    initialProduct={(taxes) => {\n                        return {\n                            ...emptyProduct,\n                            code: name,\n                            tax: taxes?.find(x => x.default)\n                        }\n                    }}\n                    onClose={() => setName('')}\n                    autoFocusIndex={1}\n                />\n            )}\n        </>\n    );\n};","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/SupplierDropdown.js",["337","338","339"],"import React, {lazy, useCallback, useRef, useState} from 'react';\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\nimport AutocompleteDropdown from \"../common/AutocompleteDropdown\";\nimport {emptySupplier} from \"../../services/EmptyObjects\";\nimport {useDispatch} from \"react-redux\";\nimport {setSupplierToInventoryMovement} from \"../../reducers/global/inventoryMovementReducer\";\nimport {AxiosSupplierClient, MovementKind, QueryKeys} from \"../../client/Client\";\nimport {useQuery} from \"react-query\";\n\nconst NewSupplier = lazy(() => import(\"../supplier/NewSupplier\"));\n\nconst movementKind = MovementKind.PURCHASE;\nconst supplierService = new AxiosSupplierClient();\n\nexport default function SupplierDropdown() {\n\n    console.log(\"Inside SupplierDropdown!\");\n\n    const [open, setOpen] = useState(false);\n    const [supplier, setSupplier] = useState(emptySupplier);\n    const dispatch = useDispatch();\n\n    const {data: suppliers, isSuccess} = useQuery(QueryKeys.SUPPLIERS, () => supplierService.findAll().then(x => x.data));\n\n    const handleSavedSupplier = useCallback((savedSupplier) => {\n        setSupplier(savedSupplier);\n        setSupplierToInventoryMovement(movementKind, savedSupplier, dispatch);\n    }, []);\n\n    const handleChange = useCallback((event, newValue) => {\n        event.preventDefault();\n        if (typeof newValue === 'string') {\n            setSupplier({...emptySupplier, name: newValue});\n            setOpen(true);\n        } else if (newValue && newValue.inputValue) {\n            setSupplier({...emptySupplier, name: newValue.inputValue});\n            setOpen(true);\n        } else if (!newValue) {\n            setSupplier(emptySupplier);\n            setSupplierToInventoryMovement(movementKind, emptySupplier, dispatch);\n        } else {\n            setSupplier(newValue);\n            setSupplierToInventoryMovement(movementKind, newValue, dispatch);\n        }\n    }, []);\n\n    return (\n        <>\n            {isSuccess && (\n                <AutocompleteDropdown\n                    label=\"Supplier\"\n                    variant=\"outlined\"\n                    icon={<LocalShippingOutlinedIcon/>}\n                    required\n                    items={suppliers}\n                    enableAddOption\n                    minWidth={250}\n                    props={{\n                        value: supplier,\n                        onChange: handleChange,\n                    }}\n                />\n            )\n            }\n            {open && (<NewSupplier\n                isOpen={open}\n                setOpen={value => setOpen(value)}\n                savedSupplier={handleSavedSupplier}\n                initialSupplier={supplier}\n                onClose={() => setSupplier(emptySupplier)}\n                autoFocusIndex={1}\n            />)}\n        </>\n    );\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/CustomBackdrop.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/PurchaseView.js",["340"],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/product/ProductView.js",["341","342"],"import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {\n    AxiosCategoryClient,\n    AxiosProductClient,\n    AxiosSubCategoryClient,\n    AxiosTaxClient,\n    QueryKeys\n} from \"../../../client/Client\";\nimport ValidTableCell from \"../../common/ValidTableCell\";\nimport ValidTextField from \"../../common/ValidTextField\";\nimport NewProduct from \"./NewProduct\";\nimport AutocompleteDropdown from \"../../common/AutocompleteDropdown\";\nimport Table from \"../../common/Table\";\nimport FastFoodIcon from '@material-ui/icons/Fastfood';\nimport {useQueryClient} from \"react-query\";\n\nconst productService = new AxiosProductClient();\nconst categoryService = new AxiosCategoryClient();\nconst subCategoryService = new AxiosSubCategoryClient();\nconst taxService = new AxiosTaxClient();\n\nexport default function ProductView() {\n    console.log(\"ProductView rendered!\");\n\n    const tableRef = useRef();\n    const errorsRef = useRef([]);\n    const [open, setOpen] = useState(false);\n    const queryClient = useQueryClient();\n\n    useEffect(() => {\n        queryClient.prefetchQuery(QueryKeys.CATEGORIES, () => categoryService.findAll().then(x => x.data));\n        queryClient.prefetchQuery(QueryKeys.SUB_CATEGORIES, () => subCategoryService.findAll().then(x => x.data));\n        queryClient.prefetchQuery(QueryKeys.TAXES, () => taxService.findAll().then(x => x.data));\n\n    }, []);\n\n    const icon = useRef(<FastFoodIcon/>);\n    const openDialog = useCallback(() => setOpen(true), []);\n    const columns = useCallback(() => [\n        {title: '#', field: 'tableData.id', editable: \"never\", width: \"1%\"},\n        {\n            title: 'Code',\n            field: \"code\",\n            width: \"20%\",\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField),\n        },\n        {\n            title: 'Name',\n            field: \"name\",\n            width: \"30%\",\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField),\n        },\n        {\n            title: 'Display name',\n            field: \"displayName\",\n            width: \"20%\",\n            required: false,\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField),\n        },\n        {\n            title: 'Buy price',\n            field: \"priceBuy\",\n            type: 'numeric',\n            width: \"10%\",\n            emptyValue: '0.00',\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField),\n        },\n        {\n            title: 'Sell price',\n            field: \"priceSell\",\n            type: 'numeric',\n            width: \"10%\",\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField),\n        },\n        {\n            title: 'Taxes',\n            field: \"tax\",\n            width: \"10%\",\n            render: product => product.tax?.name,\n            editComponent: (props) => ValidTableCell(props, errorsRef, AutocompleteDropdown, {\n                items: queryClient.getQueryData(QueryKeys.TAXES),\n                variant: \"standard\",\n                isLoading: !!queryClient.isFetching(QueryKeys.TAXES),\n                props: {\n                    value: props.value,\n                    onChange: (event, newValue) => props.onChange(newValue)\n                }\n            })\n        },\n        {\n            title: 'Final price',\n            field: \"priceTax\",\n            type: 'numeric',\n            width: \"10%\",\n            editable: 'never',\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField),\n        },\n        {\n            title: 'Category',\n            field: \"category\",\n            width: \"20%\",\n            render: product => product.category?.name,\n            editComponent: (props) => ValidTableCell(props, errorsRef, AutocompleteDropdown, {\n                items: queryClient.getQueryData(QueryKeys.CATEGORIES),\n                variant: \"standard\",\n                isLoading: !!queryClient.isFetching(QueryKeys.CATEGORIES),\n                props: {\n                    value: props.value,\n                    onChange: (event, newValue) => props.onChange(newValue)\n                }\n            })\n        },\n        {\n            title: 'Sub-Category',\n            field: \"subCategory\",\n            width: \"20%\",\n            required: false,\n            render: product => product.subCategory?.name,\n            editComponent: (props) => ValidTableCell(props, errorsRef, AutocompleteDropdown, {\n                    items: queryClient.getQueryData(QueryKeys.SUB_CATEGORIES),\n                    variant: \"standard\",\n                    isLoading: !!queryClient.isFetching(QueryKeys.SUB_CATEGORIES),\n                    props: {\n                        value: props.value,\n                        onChange: (event, newValue) => props.onChange(newValue)\n                    }\n                })\n\n        },\n        {\n            title: 'Min. stock',\n            field: 'minStock',\n            type: 'numeric',\n            required: false,\n            width: \"5%\",\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField)\n        }\n    ], []);\n\n    return (\n        <>\n            <Table\n                title=\"Products\"\n                addNewLabel=\"Add product\"\n                addNewIcon={icon}\n                onAddNew={openDialog}\n                service={productService}\n                columns={columns}\n                tableRef={tableRef}\n                errorsRef={errorsRef}\n                queryKey={QueryKeys.PRODUCTS}\n            />\n            {open && (\n                <NewProduct isOpen={open}\n                            setOpen={setOpen}\n                            savedProduct={() => tableRef.current && tableRef.current.onQueryChange()}\n                />\n            )}\n        </>\n    );\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/sub-category/SubCategoryView.js",["343","344"],"import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {AxiosCategoryClient, AxiosSubCategoryClient, QueryKeys} from \"../../../client/Client\";\nimport ValidTableCell from \"../../common/ValidTableCell\";\nimport NewSubCategory from \"./NewSubCategory\";\nimport AutocompleteDropdown from \"../../common/AutocompleteDropdown\";\nimport ValidTextField from \"../../common/ValidTextField\";\nimport Table from \"../../common/Table\";\nimport SubCategoryIcon from \"../../icons/SubCategoryIcon\";\nimport {useQueryClient} from \"react-query\";\n\nconst subCategoryService = new AxiosSubCategoryClient();\nconst categoryService = new AxiosCategoryClient();\n\nexport default function SubCategoryView() {\n    const tableRef = useRef();\n    const errorsRef = useRef([]);\n    const [open, setOpen] = useState(false);\n    const queryClient = useQueryClient();\n\n    useEffect(() => {\n        queryClient.prefetchQuery(QueryKeys.CATEGORIES, () => categoryService.findAll().then(x => x.data))\n    }, []);\n\n    console.log(\"Sub-Category rendered!\");\n\n    const openDialog = useCallback(() => setOpen(true), []);\n    const subCategoryIcon = useRef(<SubCategoryIcon/>);\n    const columns = useCallback(() => [\n        {title: '#', field: 'tableData.id', editable: \"never\", width: \"1%\"},\n        {\n            title: 'Name',\n            field: \"name\",\n            width: \"40%\",\n            editComponent: (props) => ValidTableCell(props, errorsRef, ValidTextField),\n        },\n        {\n            title: 'Category',\n            field: 'category',\n            width: \"40%\",\n            render: rowData => rowData.category?.name,\n            editComponent: props => ValidTableCell(props, errorsRef, AutocompleteDropdown, {\n                items: queryClient.getQueryData(QueryKeys.CATEGORIES),\n                variant: \"standard\",\n                isLoading: !!queryClient.isFetching(QueryKeys.CATEGORIES),\n                props: {\n                    value: props.value,\n                    onChange: (event, newValue) => props.onChange(newValue)\n                }\n            })\n        }\n    ], []);\n\n    return (\n        <>\n            <Table\n                title=\"Sub-Categories\"\n                addNewLabel=\"Add sub-category\"\n                addNewIcon={subCategoryIcon}\n                onAddNew={openDialog}\n                service={subCategoryService}\n                findAllPagedExtraArgs={{include: 'category'}}\n                columns={columns}\n                tableRef={tableRef}\n                errorsRef={errorsRef}\n                queryKey={QueryKeys.SUB_CATEGORIES}\n            />\n            {open && <NewSubCategory isOpen={open} setOpen={setOpen} refreshTable={() => tableRef.current && tableRef.current.onQueryChange()}/>}\n        </>\n    );\n}\n","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/customer/CustomerView.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/category/CategoryView.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/tax/TaxView.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/product-config/uom/UomView.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/SaleView.js",["345","346"],"import React, {useEffect, useRef, useState} from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SaleTable from \"./SaleTable\";\nimport Grid from '@material-ui/core/Grid/Grid';\nimport ProductList from \"./ProductList\";\nimport {Zoom} from \"@material-ui/core\";\nimport Tools from \"./Tools\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AxiosProductClient, AxiosTicketClient, QueryKeys} from \"../../client/Client\";\nimport Summary from \"./Summary\";\nimport ProgressButton from \"../common/ProgressButton\";\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport TabPanel from \"./TabPanel\";\nimport {Actions} from \"../../reducers/global/saleTabsReducer\";\nimport {formatMoney} from \"../../services/utils\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport clsx from 'clsx';\nimport CategoriesDrawer from \"./CategoriesDrawer\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport CustomBackdrop from \"../common/CustomBackdrop\";\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        height: '100%',\n        flexGrow: 1,\n    },\n    toolbar: {\n        display: \"flex\",\n    },\n    tabs: {\n        flexBasis: '100%'\n    },\n    '.MuiTab-wrapper': {\n        fontSize: \"2em\",\n        fontWeight: \"bold\"\n    },\n    firstGridPart: {\n        order: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.down('sm')]: {\n            order: 2,\n        }\n    },\n    secondGridPart: {\n        order: 2,\n        [theme.breakpoints.down('sm')]: {\n            order: 0,\n        }\n    },\n    menuButton: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    hide: {\n        display: 'none',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 280,\n    },\n}));\n\nconst MAX_TICKETS = 10;\nconst productService = new AxiosProductClient();\nconst ticketService = new AxiosTicketClient();\n\nexport default function SaleView() {\n    console.log(\"Inside SaleView!\");\n    const [open, setOpen] = useState(true);\n    const [disabledPayButton, setDisablePayButton] = useState(false);\n    const [tableLoading, setTableLoading] = useState(false);\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const qtyRef = useRef();\n    const searchRef = useRef();\n\n    const queryClient = useQueryClient();\n    const dispatch = useDispatch();\n    const {selectedIndex, tickets} = useSelector((state) => state.tabs);\n    const selectedTicket = tickets[selectedIndex];\n\n    const {mutate: findByCategoryOrSubCategory, data: productsByCategoryOrSubCategory, isLoading} =\n        useMutation(({id, isCategory}) => isCategory ?\n            productService.findByCategoryId(id).then(x => x.data) :\n            productService.findBySubCategoryId(id).then(x => x.data));\n\n    const {mutate: openTicket, isLoading: openTicketLoading} = useMutation(() => ticketService.openTicket(1).then(x => x.data), {\n        onSuccess: (data, variables) => dispatch({type: variables, payload: data})\n    });\n\n    const {mutate: removeTicketById, isLoading: removeTicketLoading} = useMutation(id => ticketService.deleteById(id), {\n        onSuccess: () => dispatch({type: Actions.REMOVE_SELECTED_TICKET})\n    });\n\n    const {mutate: closeTicket, status, reset} = useMutation(ticket => {\n        return ticketService.closeTicket(ticket)\n            .then(x => x.data)\n    }, {\n        onSuccess: () => {\n            if (tickets.length === 1) {\n                openTicket(Actions.UPDATE_SELECTED_TICKET);\n            } else {\n                dispatch({type: Actions.REMOVE_SELECTED_TICKET})\n            }\n            setTimeout(reset, 1000);\n        }\n    });\n\n    useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        return () => {\n            window.removeEventListener('keydown', downHandler);\n        };\n    });\n\n    useEffect(() => {\n        if (tickets.length === 0) {\n            openTicket(Actions.CREATE_TICKET);\n        } else {\n            dispatch({type: Actions.GOTO_TICKET, payload: selectedIndex})\n        }\n    }, []);\n\n    useEffect(() => {\n        queryClient.prefetchQuery(QueryKeys.PRODUCTS, () => productService.findAll().then(x => x.data));\n    }, []);\n\n    function downHandler(keyboardEvent) {\n        console.log(\"Key pressed: \", keyboardEvent);\n        if (keyboardEvent.altKey && keyboardEvent.code === 'KeyT') {\n            openNewTicket(Actions.CREATE_TICKET);\n        } else if (keyboardEvent.altKey && keyboardEvent.code === 'KeyW' && tickets.length > 1) {\n            removeCurrentTicket()\n        } else if (keyboardEvent.altKey && keyboardEvent.code === 'ArrowRight') {\n            dispatch({type: Actions.NEXT_TICKET})\n        } else if (keyboardEvent.altKey && keyboardEvent.code === 'ArrowLeft') {\n            dispatch({type: Actions.PREV_TICKET})\n        } else if (keyboardEvent.key === '*' && qtyRef.current) {\n            qtyRef.current.focus();\n        } else if (keyboardEvent.key === 'Enter' && searchRef.current) {\n            searchRef.current.focus();\n        }\n    }\n\n    function openNewTicket(action) {\n        if (tickets.length < MAX_TICKETS) {\n            openTicket(action);\n        }\n    }\n\n    function removeCurrentTicket() {\n        if (tickets.length > 1) {\n            removeTicketById(selectedTicket.id);\n        }\n    }\n\n    return (\n        <>\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Toolbar className={classes.toolbar} disableGutters>\n                        <Tabs\n                            value={selectedIndex}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"fullWidth\"\n                            classes={{\n                                root: classes.tabs\n                            }}\n                        >\n                            {tickets.map((item, index) =>\n                                <Tab id={index}\n                                     key={index}\n                                     label={formatMoney(item.ticketLines.map(x => x.amount).reduce((a, b) => a + b, 0))}\n                                     style={{\n                                         fontSize: \"2em\",\n                                         fontWeight: \"bold\"\n                                     }}\n                                     onClick={() => dispatch({type: Actions.GOTO_TICKET, payload: index})}\n                                     {...a11yProps(index)}>\n                                </Tab>\n                            )}\n                        </Tabs>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            edge=\"start\"\n                            onClick={() => setOpen(true)}\n                            className={clsx(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <CategoriesDrawer open={open} handleDrawerClose={() => setOpen(false)}\n                                  onChange={findByCategoryOrSubCategory}/>\n                {!selectedTicket || openTicketLoading || removeTicketLoading ?\n                    <CustomBackdrop/>\n                    :\n                    <main\n                        style={{position: 'relative', height: '95%'}}\n                        className={clsx(classes.content, {\n                            [classes.contentShift]: open,\n                        })}\n                    >\n                        <SwipeableViews\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                            index={selectedIndex}\n                        >\n                            {tickets.map((item, index) =>\n                                <TabPanel key={index} value={selectedIndex} index={index} {...a11yProps(index)}>\n                                    <Grid container spacing={3}>\n                                        <Grid className={classes.firstGridPart} key={\"left-side\"} item md={6} sm={12}>\n                                            <Tools/>\n                                            <SaleTable searchRef={searchRef} qtyRef={qtyRef}\n                                                       setDisablePayButton={setDisablePayButton}\n                                                       tableLoading={tableLoading}\n                                                       setTableLoading={setTableLoading}/>\n                                            <Summary\n                                                total={selectedTicket.ticketLines.map(x => x.amount).reduce((a, b) => a + b, 0)}/>\n                                        </Grid>\n                                        <Grid key={\"right-side\"} className={classes.secondGridPart} item md={6} sm={12}>\n                                            <ProductList searchRef={searchRef}\n                                                         productsByCategoryOrSubCategory={productsByCategoryOrSubCategory}\n                                                         isLoading={isLoading}\n                                                         setTableLoading={setTableLoading}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </TabPanel>\n                            )}\n                        </SwipeableViews>\n                        {tickets.map((tab, index) =>\n                            <Zoom\n                                key={index}\n                                in={selectedIndex === index}\n                                timeout={{\n                                    enter: theme.transitions.duration.enteringScreen,\n                                    exit: theme.transitions.duration.leavingScreen,\n                                }}\n                                style={{\n                                    transitionDelay: `${selectedIndex === index ? theme.transitions.duration.leavingScreen : 0}ms`,\n                                }}\n                                unmountOnExit\n                            >\n                                <ProgressButton size=\"large\"\n                                                icon={<AddShoppingCartIcon style={{fontSize: \"4em\"}}/>}\n                                                disabled={selectedTicket.ticketLines.length === 0 || disabledPayButton || tableLoading}\n                                                success={status === 'success'}\n                                                loading={status === 'loading'}\n                                                onClick={() => closeTicket(selectedTicket)}/>\n                            </Zoom>)}\n                    </main>\n                }\n            </div>\n        </>);\n}\n","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/hooks/queryClient.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/QtyTextField.js",["347"],"import ValidTextField from \"../common/ValidTextField\";\nimport React, {useEffect, useRef} from \"react\";\nimport {updateInventoryMovementLine} from \"../../reducers/global/inventoryMovementReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AxiosInventoryMovementLineClient, MovementKind} from \"../../client/Client\";\nimport {useMutation} from \"react-query\";\n\nconst inventoryMovementLineService = new AxiosInventoryMovementLineClient();\nconst movementKind = MovementKind.PURCHASE;\n\nexport default function QtyTextField({rowData, searchProductRef, setErrors, setTableLoading}) {\n\n    const dispatch = useDispatch();\n    console.log(\"Quantity: \", rowData.quantity);\n    const qty = useRef(rowData.quantity || 1);\n    console.log(\"Qty.current: \", qty.current);\n    const lineSize = useSelector((state) => state.inventoryMovement.get(movementKind).inventoryMovementLines.length);\n\n    const {mutate: saveInventoryMovementLine, error, isLoading} = useMutation(x => inventoryMovementLineService.update(x)\n        .then(y => y.data)\n        .catch(y => Promise.reject({...y?.response?.data, lineNumber: x.lineNumber})), {\n        onSuccess: data => {\n            updateInventoryMovementLine(movementKind, data, dispatch);\n            setErrors(prev => {\n                const prevState = [...prev];\n                prevState[rowData.lineNumber] = false;\n                return prevState;\n            });\n        },\n        onError: () => setErrors(prev => {\n            const prevState = [...prev];\n            prevState[rowData.lineNumber] = true;\n            return prevState;\n        })\n    });\n\n    useEffect(() => setTableLoading(isLoading), [isLoading]);\n\n    function handleQtyOnBlur(inventoryMovementLine) {\n        if (!lineSize || rowData.quantity === Number(qty.current)) {\n            return;\n        }\n\n        saveInventoryMovementLine({...inventoryMovementLine, quantity: qty.current});\n    }\n\n    return (\n        <ValidTextField\n            type=\"number\"\n            style={{\n                width: '3em'\n            }}\n            autoFocus={rowData.lineNumber === lineSize}\n            defaultValue={qty.current}\n            required={true}\n            onFocus={event => event.target.select()}\n            onKeyPress={(ev) => {\n                if (ev.key === 'Enter') {\n                    ev.preventDefault();\n                    searchProductRef.current && searchProductRef.current.focus();\n                }\n            }}\n            onChange={e => qty.current = e.target.value}\n            onBlur={() => handleQtyOnBlur(rowData)}\n            error={error && error.lineNumber === rowData.lineNumber && error.quantity}\n        />\n    );\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/ProductList.js",["348","349"],"import React, {useEffect, useState} from 'react';\nimport {createStyles, makeStyles} from '@material-ui/core/styles';\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport GridList from \"@material-ui/core/GridList\";\nimport ProductTile from \"./ProductTile\";\nimport {AxiosProductClient, AxiosTicketClient, QueryKeys, TicketLinePayload} from \"../../client/Client\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Box from \"@material-ui/core/Box\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDispatch} from \"react-redux\";\nimport {Actions} from \"../../reducers/global/saleTabsReducer\";\nimport store from \"../../store\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ValidTextField from \"../common/ValidTextField\";\nimport {useMutation, useQueryClient} from \"react-query\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        searchOrScanTextField: {\n            width: \"100%\",\n        },\n        grid: {\n            width: \"100%\",\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'flex-start',\n            overflow: 'auto',\n            maxHeight: '70vh',\n            backgroundColor: theme.palette.background.paper,\n        }\n    }),\n);\n\nconst productService = new AxiosProductClient();\nconst ticketService = new AxiosTicketClient();\n\nlet source = axios.CancelToken.source();\n\nfunction addTicketLinePromise(ticketLine) {\n    const tabs = store.getState().tabs;\n    const ticketId = tabs.tickets[tabs.selectedIndex].id;\n\n    return ticketService.addTicketLine(ticketId, ticketLine).then(x => x.data)\n}\n\nexport default function ProductList({searchRef, productsByCategoryOrSubCategory, isLoading, setTableLoading}) {\n    console.log(\"Inside Product list\");\n\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const [searchValue, setSearchValue] = useState('');\n    const queryClient = useQueryClient();\n    const dispatch = useDispatch();\n\n    const {mutate: findByCodeOrName, data: products, status, reset} = useMutation(findByCodeOrNamePromise);\n\n    const {mutate: findByCode, isLoading: findByCodeLoading} = useMutation(findByCodePromise, {\n        onSuccess: x => {\n            if (x) {\n                addTicketLine(new TicketLinePayload({\n                    product: x,\n                    quantity: 1,\n                }));\n                setSearchValue('');\n            }\n        }\n    });\n\n    const {mutate: addTicketLine, isLoading: addTicketLineLoading} = useMutation(addTicketLinePromise, {\n        onSuccess: x => dispatch({type: Actions.UPDATE_SELECTED_TICKET, payload: x})\n    });\n\n    useEffect(() => {\n        if (!searchValue) {\n            return;\n        }\n\n        reset();\n        const findByCodeOrNameTimeout = setTimeout(() => {\n            findByCodeOrName()\n        }, 300);\n\n        return () => clearTimeout(findByCodeOrNameTimeout)\n    }, [searchValue]);\n\n    useEffect(() => setTableLoading(addTicketLineLoading), [addTicketLineLoading]);\n\n    const finalProducts = !searchValue ?\n        (isLoading || !productsByCategoryOrSubCategory ? new Array(9).fill(undefined) : productsByCategoryOrSubCategory)\n        :\n        (status !== 'success' ? new Array(9).fill(undefined) : products);\n\n    function handleSearchKeyPress(event) {\n        if (event.target.value && event.key === 'Enter') {\n            event.preventDefault();\n            findByCode(event.target.value);\n        }\n    }\n\n    function findByCodePromise(code) {\n        source && source.cancel();\n\n        const productFound = queryClient.getQueryData(QueryKeys.PRODUCTS)\n            ?.find(x => x.code === code);\n        if (productFound) {\n            return Promise.resolve(productFound);\n        }\n\n        return productService.findByCode(code).then(x => x.data);\n    }\n\n    function findByCodeOrNamePromise() {\n        const searchValueLowerCase = searchValue.toLowerCase();\n        const productsFound = queryClient.getQueryData(QueryKeys.PRODUCTS)\n            ?.filter(x => x.code.toLowerCase().includes(searchValueLowerCase) || x.name.toLowerCase().includes(searchValueLowerCase));\n\n        console.log(\"Products found: \", productsFound);\n        if (productsFound?.length) {\n            return Promise.resolve(productsFound);\n        }\n\n        source && source.cancel();\n        source = axios.CancelToken.source();\n\n        return productService.findByCodeOrName({codeOrName: searchValue}, source.token).then(x => x.data);\n    }\n\n    return (\n        <div className={classes.root}>\n            <ValidTextField\n                autoFocus\n                id=\"search-textfield\"\n                label={t(\"app.searchOrScan\")}\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.searchOrScanTextField}\n                onKeyPress={handleSearchKeyPress}\n                onChange={e => setSearchValue(e.target.value)}\n                inputRef={searchRef}\n                value={searchValue}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            {findByCodeLoading ? <CircularProgress size={25}/> : <SearchIcon/>}\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <Divider style={{marginTop: 15, marginBottom: 15}}/>\n            <GridList cellHeight={\"auto\"} spacing={5} className={classes.grid}>\n                {\n                    finalProducts.map((product, index) => (\n                        product ?\n                            (<ProductTile product={product} key={index} index={index} setTableLoading={setTableLoading}/>)\n                            :\n                            (<Box key={index} maxWidth={\"13em\"} maxHeight={\"9em\"} margin={2}>\n                                <Skeleton variant=\"rect\" height={\"5em\"}/>\n                                <Skeleton/>\n                                <Skeleton width=\"60%\"/>\n                            </Box>)\n                    ))\n                }\n            </GridList>\n        </div>\n    );\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/sale/QtyTextField.js",["350"],"import ValidTextField from \"../common/ValidTextField\";\nimport React, {useEffect, useRef} from \"react\";\nimport {AxiosTicketLineClient} from \"../../client/Client\";\nimport {useDispatch} from \"react-redux\";\nimport {Actions} from \"../../reducers/global/saleTabsReducer\";\nimport {useMutation} from \"react-query\";\n\nconst ticketLineService = new AxiosTicketLineClient();\n\nexport default function QtyTextField({rowData, searchRef, qtyRef, setErrors, setTableLoading}) {\n\n    const dispatch = useDispatch();\n    const qty = useRef(1);\n\n    const {mutate: saveTicketLine, error, isLoading} = useMutation(x => ticketLineService.update(x)\n        .then(y => y.data)\n        .catch(y => Promise.reject({...y?.response?.data, lineNumber: x.lineNumber})), {\n        onSuccess: data => {\n            dispatch({type: Actions.UPDATE_TICKET_LINE, payload: data});\n            setErrors(prev => {\n                const prevState = [...prev];\n                prevState[rowData.lineNumber] = false;\n                return prevState;\n            });\n        },\n        onError: () => setErrors(prev => {\n            const prevState = [...prev];\n            prevState[rowData.lineNumber] = true;\n            return prevState;\n        })\n    });\n\n    useEffect(() => setTableLoading(isLoading), [isLoading]);\n\n    function handleQtyOnBlur() {\n        if (rowData.quantity !== qty.current) {\n            saveTicketLine({...rowData, quantity: qty.current});\n        }\n    }\n\n    return (\n        <ValidTextField\n            type=\"number\"\n            style={{\n                width: '3em'\n            }}\n            inputRef={qtyRef}\n            defaultValue={1}\n            required={true}\n            onFocus={event => event.target.select()}\n            onKeyPress={(ev) => {\n                if (ev.key === 'Enter') {\n                    ev.preventDefault();\n                    searchRef.current && searchRef.current.focus();\n                }\n            }}\n            onChange={e => qty.current = e.target.value}\n            onBlur={handleQtyOnBlur}\n            error={error && error.lineNumber === rowData.lineNumber && error.quantity}\n        />\n    );\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/purchase/open-existing/OpenExistingDialog.js",["351","352"],"import DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport React, {useEffect, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Zoom from \"@material-ui/core/Zoom/Zoom\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery/useMediaQuery\";\nimport BasicTable from \"../../common/BasicTable\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport {resolveField} from \"../../../services/utils\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: 550,\n        height: 500,\n        alignItems: \"stretch\"\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    },\n    tile: {\n        borderStyle: \"solid\",\n        borderRadius: \"5px\",\n        borderWidth: \"1px\",\n        borderColor: theme.palette.text.primary,\n        cursor: \"pointer\",\n        transition: 'transform .2s',\n        paddingLeft: '0.6em',\n        '&:hover': {\n            borderWidth: \"2px\",\n            borderColor: theme.palette.primary.main,\n            transform: 'scale(1.03)'\n        }\n    },\n    disabledTile: {\n        opacity: 0.6,\n        borderStyle: \"solid\",\n        borderRadius: \"5px\",\n        borderWidth: \"1px\",\n        transition: 'transform .2s',\n        paddingLeft: '0.6em',\n    },\n    titleBar: {\n        background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n        color: 'white',\n    }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom ref={ref} {...props} />;\n});\n\nexport default function OpenExistingDialog({open, setOpen, dialogTitle, icon, data, linesField, titleField, lineColumns, onTileClick, onCloseClick, isLoading}) {\n\n    const [loadingIndex, setLoadingIndex] = useState(-1);\n    const theme = useTheme();\n    const classes = useStyles();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    function handleTileClick(lineData, index) {\n        if (isLoading) return;\n\n        setLoadingIndex(index);\n        onTileClick(lineData);\n        setOpen(false);\n    }\n\n    function handleCloseClick(event, lineData, index) {\n        event.stopPropagation();\n        setLoadingIndex(index);\n        onCloseClick(lineData);\n    }\n\n    useEffect(() => {\n        if (!isLoading) {\n            setLoadingIndex(-1)\n        }\n    }, [isLoading]);\n\n    return (\n        <Dialog open={open} onClose={() => setOpen(false)} fullScreen={fullScreen} TransitionComponent={Transition}\n                aria-labelledby=\"form-dialog-title\">\n            <form>\n                <DialogTitle id=\"form-dialog-title\" style={{backgroundColor: theme.palette.background.default}}>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <div style={{display: \"flex\", color: theme.palette.primary.main, marginRight: \"0.5em\"}}>\n                            {icon}\n                        </div>\n                        {dialogTitle}\n                    </Box>\n                </DialogTitle>\n                <Divider style={{backgroundColor: theme.palette.primary.main}}/>\n                <DialogContent className={classes.root} style={{overflowY: \"hidden\", margin: '2em'}}>\n                    <GridList cellHeight={200} spacing={15} className={classes.gridList}>\n                        {data.map((x, i) => (\n                            <GridListTile key={i} classes={{tile: i === loadingIndex ? classes.disabledTile : classes.tile}} onClick={() => handleTileClick(x, i)}>\n                                {i === loadingIndex ? <CircularProgress style={{\n                                    marginTop: \"5.6em\",\n                                    marginLeft: \"5.8em\",\n                                }}/> : <BasicTable key={i} data={resolveField(x, linesField, [])} columns={lineColumns}/>}\n                                        <GridListTileBar\n                                            title={resolveField(x, titleField)}\n                                            titlePosition=\"top\"\n                                            actionIcon={\n                                                <IconButton aria-label={`star ${x.title}`} className={classes.icon}\n                                                            onClick={(e) => handleCloseClick(e, x, i)} disabled={i === loadingIndex}>\n                                                    <CloseIcon fontSize=\"inherit\"/>\n                                                </IconButton>\n                                            }\n                                            actionPosition=\"right\"\n                                            className={classes.titleBar}\n                                        />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </DialogContent>\n            </form>\n        </Dialog>\n    );\n}","/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/BasicTable.js",[],"/Users/deniscitaku/Workspace/cloud-pos/pos/src/main/webapp/src/components/common/CustomTable.js",[],{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":34,"column":9,"nodeType":"359","messageId":"360","endLine":34,"endColumn":20},{"ruleId":"361","severity":1,"message":"362","line":4,"column":1,"nodeType":"363","endLine":11,"endColumn":3},{"ruleId":"364","severity":1,"message":"365","line":30,"column":8,"nodeType":"366","endLine":30,"endColumn":16,"suggestions":"367"},{"ruleId":"357","severity":1,"message":"368","line":2,"column":9,"nodeType":"359","messageId":"360","endLine":2,"endColumn":20},{"ruleId":"357","severity":1,"message":"369","line":1,"column":16,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"370","line":3,"column":16,"nodeType":"359","messageId":"360","endLine":3,"endColumn":33},{"ruleId":"364","severity":1,"message":"371","line":244,"column":8,"nodeType":"366","endLine":244,"endColumn":10,"suggestions":"372"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"373","line":1,"column":9,"nodeType":"359","messageId":"360","endLine":1,"endColumn":28},{"ruleId":"353","replacedBy":"374"},{"ruleId":"355","replacedBy":"375"},{"ruleId":"357","severity":1,"message":"376","line":1,"column":16,"nodeType":"359","messageId":"360","endLine":1,"endColumn":27},{"ruleId":"357","severity":1,"message":"369","line":1,"column":29,"nodeType":"359","messageId":"360","endLine":1,"endColumn":38},{"ruleId":"357","severity":1,"message":"377","line":1,"column":48,"nodeType":"359","messageId":"360","endLine":1,"endColumn":56},{"ruleId":"357","severity":1,"message":"378","line":11,"column":28,"nodeType":"359","messageId":"360","endLine":11,"endColumn":49},{"ruleId":"357","severity":1,"message":"379","line":12,"column":9,"nodeType":"359","messageId":"360","endLine":12,"endColumn":14},{"ruleId":"357","severity":1,"message":"380","line":13,"column":9,"nodeType":"359","messageId":"360","endLine":13,"endColumn":28},{"ruleId":"364","severity":1,"message":"381","line":56,"column":60,"nodeType":"366","endLine":56,"endColumn":82,"suggestions":"382"},{"ruleId":"357","severity":1,"message":"383","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":13},{"ruleId":"364","severity":1,"message":"384","line":32,"column":8,"nodeType":"366","endLine":32,"endColumn":16,"suggestions":"385"},{"ruleId":"357","severity":1,"message":"386","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":14},{"ruleId":"357","severity":1,"message":"387","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":26},{"ruleId":"357","severity":1,"message":"388","line":10,"column":9,"nodeType":"359","messageId":"360","endLine":10,"endColumn":29},{"ruleId":"357","severity":1,"message":"389","line":11,"column":8,"nodeType":"359","messageId":"360","endLine":11,"endColumn":26},{"ruleId":"364","severity":1,"message":"390","line":61,"column":8,"nodeType":"366","endLine":61,"endColumn":20,"suggestions":"391"},{"ruleId":"364","severity":1,"message":"392","line":67,"column":8,"nodeType":"366","endLine":67,"endColumn":18,"suggestions":"393"},{"ruleId":"353","replacedBy":"394"},{"ruleId":"355","replacedBy":"395"},{"ruleId":"364","severity":1,"message":"381","line":37,"column":49,"nodeType":"366","endLine":37,"endColumn":60,"suggestions":"396"},{"ruleId":"364","severity":1,"message":"397","line":41,"column":8,"nodeType":"366","endLine":41,"endColumn":10,"suggestions":"398"},{"ruleId":"364","severity":1,"message":"399","line":64,"column":8,"nodeType":"366","endLine":64,"endColumn":10,"suggestions":"400"},{"ruleId":"357","severity":1,"message":"401","line":1,"column":35,"nodeType":"359","messageId":"360","endLine":1,"endColumn":41},{"ruleId":"364","severity":1,"message":"402","line":28,"column":8,"nodeType":"366","endLine":28,"endColumn":10,"suggestions":"403"},{"ruleId":"364","severity":1,"message":"402","line":45,"column":8,"nodeType":"366","endLine":45,"endColumn":10,"suggestions":"404"},{"ruleId":"364","severity":1,"message":"405","line":69,"column":8,"nodeType":"366","endLine":69,"endColumn":10,"suggestions":"406"},{"ruleId":"364","severity":1,"message":"407","line":35,"column":8,"nodeType":"366","endLine":35,"endColumn":10,"suggestions":"408"},{"ruleId":"364","severity":1,"message":"409","line":138,"column":8,"nodeType":"366","endLine":138,"endColumn":10,"suggestions":"410"},{"ruleId":"364","severity":1,"message":"407","line":22,"column":8,"nodeType":"366","endLine":22,"endColumn":10,"suggestions":"411"},{"ruleId":"364","severity":1,"message":"409","line":51,"column":8,"nodeType":"366","endLine":51,"endColumn":10,"suggestions":"412"},{"ruleId":"364","severity":1,"message":"413","line":152,"column":8,"nodeType":"366","endLine":152,"endColumn":10,"suggestions":"414"},{"ruleId":"364","severity":1,"message":"407","line":156,"column":8,"nodeType":"366","endLine":156,"endColumn":10,"suggestions":"415"},{"ruleId":"364","severity":1,"message":"381","line":37,"column":49,"nodeType":"366","endLine":37,"endColumn":60,"suggestions":"416"},{"ruleId":"364","severity":1,"message":"417","line":90,"column":8,"nodeType":"366","endLine":90,"endColumn":21,"suggestions":"418"},{"ruleId":"364","severity":1,"message":"381","line":92,"column":60,"nodeType":"366","endLine":92,"endColumn":82,"suggestions":"419"},{"ruleId":"364","severity":1,"message":"381","line":33,"column":49,"nodeType":"366","endLine":33,"endColumn":60,"suggestions":"420"},{"ruleId":"357","severity":1,"message":"421","line":18,"column":8,"nodeType":"359","messageId":"360","endLine":18,"endColumn":16},{"ruleId":"357","severity":1,"message":"422","line":20,"column":8,"nodeType":"359","messageId":"360","endLine":20,"endColumn":12},"no-native-reassign",["423"],"no-negated-in-lhs",["424"],"no-unused-vars","'QueryClient' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDisablePayButton'. Either include it or remove the dependency array. If 'setDisablePayButton' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["425"],"'useSelector' is defined but never used.","'useEffect' is defined but never used.","'CancelTokenSource' is defined but never used.","React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'errorMessage', 'request', and 'response'. Either include them or remove the dependency array. If 'request' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["426"],"'AxiosCategoryClient' is defined but never used.",["423"],["424"],"'useCallback' is defined but never used.","'useState' is defined but never used.","'AxiosTicketLineClient' is defined but never used.","'fetch' is defined but never used.","'useSaveWithCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'setTableLoading'. Either include it or remove the dependency array. If 'setTableLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["427"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'setDisableCloseButton'. Either include it or remove the dependency array. If 'setDisableCloseButton' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["428"],"'Button' is defined but never used.","'ShoppingBasketIcon' is defined but never used.","'setInventoryMovement' is defined but never used.","'OpenExistingDialog' is defined but never used.","React Hook useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array.",["429"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["430"],["423"],["424"],["431"],"React Hook useCallback has a missing dependency: 'productChanged'. Either include it or remove the dependency array.",["432"],"React Hook useCallback has missing dependencies: 'productChanged' and 'products'. Either include them or remove the dependency array.",["433"],"'useRef' is defined but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["434"],["435"],"React Hook useEffect has a missing dependency: 'openInventoryMovement'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has a missing dependency: 'queryClient'. Either include it or remove the dependency array.",["437"],"React Hook useCallback has a missing dependency: 'queryClient'. Either include it or remove the dependency array.",["438"],["439"],["440"],"React Hook useEffect has missing dependencies: 'dispatch', 'openTicket', 'selectedIndex', and 'tickets.length'. Either include them or remove the dependency array.",["441"],["442"],["443"],"React Hook useEffect has missing dependencies: 'findByCodeOrName' and 'reset'. Either include them or remove the dependency array.",["444"],["445"],["446"],"'Skeleton' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"465","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"470","fix":"472"},{"desc":"470","fix":"473"},{"desc":"470","fix":"474"},{"desc":"475","fix":"476"},{"desc":"470","fix":"477"},{"desc":"459","fix":"478"},{"desc":"479","fix":"480"},{"desc":"451","fix":"481"},{"desc":"459","fix":"482"},"Update the dependencies array to be: [errors, setDisablePayButton]",{"range":"483","text":"484"},"Update the dependencies array to be: [enqueueSnackbar, errorMessage, request, response]",{"range":"485","text":"486"},"Update the dependencies array to be: [addTicketLineLoading, setTableLoading]",{"range":"487","text":"488"},"Update the dependencies array to be: [errors, setDisableCloseButton]",{"range":"489","text":"490"},"Update the dependencies array to be: [categories, selected]",{"range":"491","text":"492"},"Update the dependencies array to be: [onChange, selected]",{"range":"493","text":"494"},"Update the dependencies array to be: [isLoading, setTableLoading]",{"range":"495","text":"496"},"Update the dependencies array to be: [productChanged]",{"range":"497","text":"498"},"Update the dependencies array to be: [productChanged, products]",{"range":"499","text":"500"},"Update the dependencies array to be: [dispatch]",{"range":"501","text":"502"},{"range":"503","text":"502"},"Update the dependencies array to be: [openInventoryMovement]",{"range":"504","text":"505"},"Update the dependencies array to be: [queryClient]",{"range":"506","text":"507"},{"range":"508","text":"507"},{"range":"509","text":"507"},{"range":"510","text":"507"},"Update the dependencies array to be: [dispatch, openTicket, selectedIndex, tickets.length]",{"range":"511","text":"512"},{"range":"513","text":"507"},{"range":"514","text":"496"},"Update the dependencies array to be: [findByCodeOrName, reset, searchValue]",{"range":"515","text":"516"},{"range":"517","text":"488"},{"range":"518","text":"496"},[1396,1404],"[errors, setDisablePayButton]",[7970,7972],"[enqueueSnackbar, errorMessage, request, response]",[2110,2132],"[addTicketLineLoading, setTableLoading]",[1537,1545],"[errors, setDisableCloseButton]",[2237,2249],"[categories, selected]",[2395,2405],"[onChange, selected]",[1838,1849],"[isLoading, setTableLoading]",[1959,1961],"[productChanged]",[2765,2767],"[productChanged, products]",[1222,1224],"[dispatch]",[1907,1909],[2946,2948],"[openInventoryMovement]",[1376,1378],"[queryClient]",[5127,5129],[985,987],[2078,2080],[5040,5042],"[dispatch, openTicket, selectedIndex, tickets.length]",[5180,5182],[1655,1666],[3078,3091],"[findByCodeOrName, reset, searchValue]",[3154,3176],[1269,1280]]